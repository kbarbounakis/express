{"version":3,"sources":["../../../server/listeners/message-catcher-listener.js"],"names":["beforeSave","event","callback","afterSave","context","model","state","target","$receiving","recipients","recipient","split","forEach","x","length","indexOf","push","cc","bcc","where","in","select","flatten","silent","getAllItems","then","users","messages","map","user","message","Object","assign","id","owner","save","catch","err"],"mappings":"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","sourcesContent":["/**\n * @param {DataEventArgs} event\n * @param {Function} callback\n */\nexport function beforeSave(event, callback) {\n    return callback();\n}\n\n/**\n * @param {DataEventArgs} event\n * @param {Function} callback\n */\nexport function afterSave(event, callback) {\n    const context = event.model.context;\n    if (event.state !== 1) {\n        return callback();\n    }\n    if (event.target.$receiving) {\n        return callback();\n    }\n    /**\n     *\n     * @type {UserMessage|*}\n     */\n    const target = event.target;\n    //update other mailboxes (to,cc,bcc)\n    const recipients = [];\n    if (target.recipient) {\n        target.recipient.split(';').forEach(function (x) {\n            if (x.length > 0) {\n                if (recipients.indexOf(x) < 0) {\n                    recipients.push(x);\n                }\n            }\n        });\n    }\n    if (target.cc) {\n        target.cc.split(';').forEach(function (x) {\n            if (x.length > 0) {\n                if (recipients.indexOf(x) < 0) {\n                    recipients.push(x);\n                }\n            }\n        });\n    }\n    if (target.bcc) {\n        target.bcc.split(';').forEach(function (x) {\n            if (x.length > 0) {\n                if (recipients.indexOf(x) < 0) {\n                    recipients.push(x);\n                }\n            }\n        });\n    }\n    return context.model('Person').where('email').in(recipients)\n        .select('user')\n        .flatten()\n        .silent().getAllItems().then(users => {\n            const messages = users.map(user => {\n                const message = Object.assign({}, event.target);\n                // remove id\n                delete message.id;\n                // remove bcc\n                delete message.bcc;\n                // set owner\n                message.owner = user;\n                // set receiving flag\n                message.$receiving = true;\n            });\n            return context.model('UserMessage').silent().save(messages);\n        }).then( () => {\n            return callback();\n        }).catch(err => {\n            return callback(err);\n        });\n}\n"],"file":"message-catcher-listener.js"}